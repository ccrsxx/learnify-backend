openapi: 3.0.3
info:
  title: MOOC - Final Project Fullstack Web and Android
  description: |-
    A website and mobile-based Massive Open Online Courses (MOOC) application

    ## How to authenticate

    1. Login with email and password on [this](#/auth/login) endpoint with any of the available users above.
    1. Copy the token from the response.
    1. Click the `Authorize` button on the top right corner of this page.
    1. Paste the token inside the `value` field and click `Authorize` button. Don't forget to add `Bearer ` prefix before the token.
  version: 1.0.0
  license:
    name: Production Server
    url: https://api.belajar.risalamin.com
externalDocs:
  description: GitHub Repository
  url: https://github.com/ccrsxx/binar-backend
servers:
  - url: https://api.belajar.risalamin.com
    description: Production server
  - url: http://localhost:3000
    description: Local server
tags:
  - name: index
    description: Everything about index
  - name: auth
    description: Everything about auth
  - name: courses
    description: Everything about courses
  - name: course-categories
    description: Everything about course categories
paths:
  /:
    get:
      tags:
        - index
      summary: Welcome to API
      description: Returns a welcome message and docs url
      operationId: index
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Ping successfully
                  docs:
                    type: string
                    example: http://api.belajar.risalamin.com/docs
  /auth/login:
    post:
      tags:
        - auth
      summary: Login
      description: Login with email and password
      operationId: login
      requestBody:
        description: Login as an superadmin
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Login successfully
                  data:
                    allOf:
                      - $ref: '#/components/schemas/User'
                      - type: object
                        properties:
                          token:
                            type: string
                            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImZiOWRlNThjLTIzNTctNDdhOS1iNWU1LWMzM2IwNWE4MzE2NiIsImlhdCI6MTY5Nzk4NjI0OCwiZXhwIjoxNjk4MDcyNjQ4fQ.AeyJQD5-VFCsue5gtwelyTrKKile_zpk1EOCJoarQxY
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MissingCredentialsError'
                  - $ref: '#/components/schemas/InvalidCredentialsError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordIsNotMatchError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/register:
    post:
      tags:
        - auth
      summary: Register
      description: Register user
      operationId: register
      requestBody:
        $ref: '#/components/requestBodies/UserBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User created successfully
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /courses:
    get:
      tags:
        - courses
      summary: Get all courses
      description: Get all courses
      operationId: courses
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Course'
        '400':
          $ref: '#/components/responses/MissingAuthorizationError'
        '401':
          $ref: '#/components/responses/InvalidAuthorizationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - token: []
  /courses/{id}:
    get:
      tags:
        - courses
      summary: Get course data by ID
      description: Get course data by ID
      operationId: courses-data
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The Course ID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CourseDetails'
        '400':
          $ref: '#/components/responses/MissingAuthorizationError'
        '401':
          $ref: '#/components/responses/InvalidAuthorizationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - token: []
  /course-categories:
    get:
      tags:
        - course-categories
      summary: Get all course category
      description: Get all course category
      operationId: course-categories
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CourseCategory'
        '400':
          $ref: '#/components/responses/MissingAuthorizationError'
        '401':
          $ref: '#/components/responses/InvalidAuthorizationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - token: []
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Satella
        admin:
          type: boolean
          example: false
        email:
          type: string
          example: satella@rezero.com
        password:
          type: string
          example: $2b$10$m9qQtOm.ilSASXlPIdVaROsO4ExZAs9NQZvZUx7bG7OZqGScy3JMm
        phone_number:
          type: string
          example: 081234567890
        created_at:
          type: string
          example: '2021-01-01T00:00:00.000Z'
        updated_at:
          type: string
          example: '2021-01-01T00:00:00.000Z'
    EditableUser:
      type: object
      properties:
        name:
          type: string
          example: Satella
        email:
          type: string
          example: satella@rezero.com
        password:
          type: string
          example: satella
        image:
          type: string
          example: https://random-site.com/random-image.png
        username:
          type: string
          example: satella
    UserCredentials:
      type: object
      properties:
        email:
          type: string
          example: emilia@rezero.com
        password:
          type: string
          example: emilia
    Course:
      type: object
      properties:
        id:
          type: string
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Web Development
        code:
          type: string
          example: ZQosLgGtzB
        price:
          type: integer
          example: 100000
        author:
          type: string
          example: Ronald
        image:
          type: string
          example: https://loremflickr.com/640/480/animals?lock=5129160257175552
        rating:
          type: integer
          example: 5
        premium:
          type: boolean
          example: false
        telegram:
          type: string
          example: https://random-site.com/tele-group
        difficulty:
          type: string
          example: INTERMEDIATE
          enum:
            - BEGINNER
            - INTERMEDIATE
            - ADVANCED
        description:
          type: string
          example: This course will help you become a great programmer
        intro_video:
          type: string
          example: https://random-site.com/random-video.mkv
        onboarding_text:
          type: string
          example: This course will help you become a great programmer
        target_audience:
          type: array
          items:
            type: string
          example:
            - You want to become a great programmer
            - You want to become a great programmer
            - You want to become a great programmer
        user_id:
          type: string
          example: c6e7c58b-d2a7-430c-b913-00b9bf09bf5e
        course_category_id:
          type: string
          example: 3bc509a0-923c-419d-8bcd-3e269289dc8e
        user:
          $ref: '#/components/schemas/User'
        course_category:
          $ref: '#/components/schemas/CourseCategory'
        created_at:
          type: string
          example: '2021-01-01T00:00:00.000Z'
        updated_at:
          type: string
          example: '2021-01-01T00:00:00.000Z'
    CourseDetails:
      type: object
      properties:
        id:
          type: string
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Web Development
        code:
          type: string
          example: ZQosLgGtzB
        price:
          type: integer
          example: 100000
        author:
          type: string
          example: Ronald
        image:
          type: string
          example: https://loremflickr.com/640/480/animals?lock=5129160257175552
        rating:
          type: integer
          example: 5
        premium:
          type: boolean
          example: false
        telegram:
          type: string
          example: https://random-site.com/tele-group
        difficulty:
          type: string
          example: INTERMEDIATE
          enum:
            - BEGINNER
            - INTERMEDIATE
            - ADVANCED
        description:
          type: string
          example: This course will help you become a great programmer
        intro_video:
          type: string
          example: https://random-site.com/random-video.mkv
        onboarding_text:
          type: string
          example: This course will help you become a great programmer
        target_audience:
          type: array
          items:
            type: string
          example:
            - You want to become a great programmer
            - You want to become a great programmer
            - You want to become a great programmer
        user_id:
          type: string
          example: c6e7c58b-d2a7-430c-b913-00b9bf09bf5e
        course_category_id:
          type: string
          example: 3bc509a0-923c-419d-8bcd-3e269289dc8e
        course_category:
          $ref: '#/components/schemas/CourseCategory'
        course_chapter_id:
          type: string
          example: 3062d67c-e17a-46e5-9bcb-8c31045d8a74
        course_chapter:
          type: array
          items:
            type: object
            oneOf:
              - $ref: '#/components/schemas/CourseChapter'
              - $ref: '#/components/schemas/CourseChapter'
        total_duration:
          type: integer
          example: 55
        total_materials:
          type: integer
          example: 3
        created_at:
          type: string
          example: '2021-01-01T00:00:00.000Z'
        updated_at:
          type: string
          example: '2021-01-01T00:00:00.000Z'
    CourseChapter:
      type: object
      properties:
        id:
          type: string
          example: 3062d67c-e17a-46e5-9bcb-8c31045d8a74
        name:
          type: string
          example: Pengenalan Fullstack
        duration:
          type: integer
          example: 39
        order_index:
          type: integer
          example: 1
        course_id:
          type: string
          example: 5db0a017-6041-4d9a-8f44-5fca03d5378
        course_material_id:
          type: string
          example: 5db0a017-6041-4d9a-8f44-5fca03d5378
        course_material:
          type: array
          items:
            type: object
            oneOf:
              - $ref: '#/components/schemas/CourseMaterial'
              - $ref: '#/components/schemas/CourseMaterial'
        created_at:
          type: string
          example: '2021-01-01T00:00:00.000Z'
        updated_at:
          type: string
          example: '2021-01-01T00:00:00.000Z'
    CourseMaterial:
      type: object
      properties:
        id:
          type: string
          example: a34858de-4585-47f0-892c-3660ad3cc032
        name:
          type: string
          example: Apa itu Fullstack?
        video:
          type: string
          example: https://overcooked-weight.org
        order_index:
          type: integer
          example: 1
        course_chapter_id:
          type: string
          example: 3062d67c-e17a-46e5-9bcb-8c31045d8a74
        created_at:
          type: string
          example: '2021-01-01T00:00:00.000Z'
        updated_at:
          type: string
          example: '2021-01-01T00:00:00.000Z'
    CourseCategory:
      type: object
      properties:
        id:
          type: string
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Ronald
        image:
          type: string
          example: https://random-site.com/random-image.png
        created_at:
          type: string
          example: '2021-01-01T00:00:00.000Z'
        updated_at:
          type: string
          example: '2021-01-01T00:00:00.000Z'
    SuccessResponse:
      type: object
      properties:
        message:
          type: string
        data:
          type: object
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
    MissingCredentialsError:
      type: object
      properties:
        message:
          type: string
          example: Email and password are required
    InvalidCredentialsError:
      type: object
      properties:
        message:
          type: string
          example: Email and password must be a string
    PasswordIsNotMatchError:
      type: object
      properties:
        message:
          type: string
          example: Password is not match
    InternalServerError:
      type: object
      properties:
        message:
          type: string
          example: Internal server error
    ValidationError:
      properties:
        message:
          type: string
          example: Validation error
    AdminError:
      type: object
      properties:
        message:
          type: string
          example: Only admin is allowed for this endpoint
    SuperAdminError:
      type: object
      properties:
        message:
          type: string
          example: Only superadmin is allowed for this endpoint
    MissingAuthorizationError:
      type: object
      properties:
        message:
          type: string
          example: Missing authorization header
    InvalidAuthorizationError:
      type: object
      properties:
        message:
          type: string
          example: Invalid authorization header
  responses:
    InvalidAuthorizationError:
      description: Invalid authorization header
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidAuthorizationError'
    MissingAuthorizationError:
      description: Missing authorization header
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MissingAuthorizationError'
    MissingCredentialsError:
      description: Email and password are required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MissingCredentialsError'
    InvalidCredentialsError:
      description: Email and password must be a string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidCredentialsError'
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerError'
    AdminError:
      description: Only admin is allowed for this endpoint
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdminError'
    SuperAdminError:
      description: Only superadmin is allowed for this endpoint
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuperAdminError'
    ValidationError:
      description: Validation error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'
    PasswordIsNotMatchError:
      description: Password is not match
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PasswordIsNotMatchError'
  requestBodies:
    UserBody:
      description: User object that needs to be added
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EditableUser'
  securitySchemes:
    token:
      type: apiKey
      name: Authorization
      in: header
      description: >-
        Enter the token with the `Bearer: ` prefix, e.g. "Bearer abcde12345".
